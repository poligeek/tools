#!/usr/bin/env ruby

require 'net/http'
require 'net/https'
require 'net/scp'
require 'optparse'
require 'ruby-progressbar'
require 'terminfo'
require 'highline/import'

def upload_audio_to_pg_storage (file, release_number)
  new_filename = 'show' + release_number + '.mp3'
  progressbar = ProgressBar.create(:title => new_filename, :starting_at => 0, :total => 100, :format => '%t [%B]')
  progress = 0
  puts "Uploading #{new_filename} to storage.poligeek.fr"
  # Slack -> "Uploading #{new_filename} to storage.poligeek.fr"
  Net::SCP.upload!("storage.poligeek.fr", "root", file, "/var/www/pg-storage/shows/#{new_filename}") do |ch, name, sent, total|
    if sent/total.to_f > progress + 0.01
      progress += 0.01
      progressbar.increment
    end

    if sent == total
      clear_line()
      puts "[OK] #{new_filename} successfuly uploaded to storage.poligeek.fr"
      # Slack -> "[OK] #{new_filename} successfuly uploaded to storage.poligeek.fr\n"
    end
  end
end

def clear_line
# Probably not the best way to do...
  for i in 0..(TermInfo.screen_size[1] - 1)
    print " "
  end
  print "\r"
end

# Parse
options = {
  :release_number => nil,
  :audiofile => nil
}

parser = OptionParser.new do|opts|
	opts.banner = "Usage: pg_slack message [options]"

	opts.on('-a', '--audio-file audio-file', 'Podcast audio file') do |audiofile|
    options[:audiofile] = audiofile
	end

	opts.on('-h', '--help', 'Displays Help') do
		puts opts
		exit
	end
end
parser.parse!
options[:release_number] = ARGV[0]

# Validation checks
raise "No release number provided" unless options[:release_number]
raise "No audio file provided" unless options[:audiofile]

# Prompt confirmation
puts "-----------"
puts "Audio file: #{options[:audiofile]}"
puts "-----------"
exit unless HighLine.agree("Ready to upload ##{options[:release_number]}. Do you want to proceed? (Y/N)")

# Perform actions
upload_audio_to_pg_storage(options[:audiofile], options[:release_number])
